//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientEvalService.ServiceReferenceEval {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceEval.IEvalService")]
    public interface IEvalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/SubmitEval", ReplyAction="http://tempuri.org/IEvalService/SubmitEvalResponse")]
        void SubmitEval(EvalServiceLibrary.Eval eval);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/SubmitEval", ReplyAction="http://tempuri.org/IEvalService/SubmitEvalResponse")]
        System.IAsyncResult BeginSubmitEval(EvalServiceLibrary.Eval eval, System.AsyncCallback callback, object asyncState);
        
        void EndSubmitEval(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/GetEval", ReplyAction="http://tempuri.org/IEvalService/GetEvalResponse")]
        EvalServiceLibrary.Eval GetEval(string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/GetEval", ReplyAction="http://tempuri.org/IEvalService/GetEvalResponse")]
        System.IAsyncResult BeginGetEval(string id, System.AsyncCallback callback, object asyncState);
        
        EvalServiceLibrary.Eval EndGetEval(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/GetAllEvals", ReplyAction="http://tempuri.org/IEvalService/GetAllEvalsResponse")]
        EvalServiceLibrary.Eval[] GetAllEvals();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/GetAllEvals", ReplyAction="http://tempuri.org/IEvalService/GetAllEvalsResponse")]
        System.IAsyncResult BeginGetAllEvals(System.AsyncCallback callback, object asyncState);
        
        EvalServiceLibrary.Eval[] EndGetAllEvals(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/GetEvalsBySubmitter", ReplyAction="http://tempuri.org/IEvalService/GetEvalsBySubmitterResponse")]
        EvalServiceLibrary.Eval[] GetEvalsBySubmitter(string submitter);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/GetEvalsBySubmitter", ReplyAction="http://tempuri.org/IEvalService/GetEvalsBySubmitterResponse")]
        System.IAsyncResult BeginGetEvalsBySubmitter(string submitter, System.AsyncCallback callback, object asyncState);
        
        EvalServiceLibrary.Eval[] EndGetEvalsBySubmitter(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvalService/RemoveEval", ReplyAction="http://tempuri.org/IEvalService/RemoveEvalResponse")]
        void RemoveEval(string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IEvalService/RemoveEval", ReplyAction="http://tempuri.org/IEvalService/RemoveEvalResponse")]
        System.IAsyncResult BeginRemoveEval(string id, System.AsyncCallback callback, object asyncState);
        
        void EndRemoveEval(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEvalServiceChannel : ClientEvalService.ServiceReferenceEval.IEvalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEvalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEvalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EvalServiceLibrary.Eval Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EvalServiceLibrary.Eval)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEvalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEvalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EvalServiceLibrary.Eval[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EvalServiceLibrary.Eval[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEvalsBySubmitterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEvalsBySubmitterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public EvalServiceLibrary.Eval[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((EvalServiceLibrary.Eval[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EvalServiceClient : System.ServiceModel.ClientBase<ClientEvalService.ServiceReferenceEval.IEvalService>, ClientEvalService.ServiceReferenceEval.IEvalService {
        
        private BeginOperationDelegate onBeginSubmitEvalDelegate;
        
        private EndOperationDelegate onEndSubmitEvalDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitEvalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEvalDelegate;
        
        private EndOperationDelegate onEndGetEvalDelegate;
        
        private System.Threading.SendOrPostCallback onGetEvalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllEvalsDelegate;
        
        private EndOperationDelegate onEndGetAllEvalsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEvalsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEvalsBySubmitterDelegate;
        
        private EndOperationDelegate onEndGetEvalsBySubmitterDelegate;
        
        private System.Threading.SendOrPostCallback onGetEvalsBySubmitterCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveEvalDelegate;
        
        private EndOperationDelegate onEndRemoveEvalDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveEvalCompletedDelegate;
        
        public EvalServiceClient() {
        }
        
        public EvalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EvalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubmitEvalCompleted;
        
        public event System.EventHandler<GetEvalCompletedEventArgs> GetEvalCompleted;
        
        public event System.EventHandler<GetAllEvalsCompletedEventArgs> GetAllEvalsCompleted;
        
        public event System.EventHandler<GetEvalsBySubmitterCompletedEventArgs> GetEvalsBySubmitterCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RemoveEvalCompleted;
        
        public void SubmitEval(EvalServiceLibrary.Eval eval) {
            base.Channel.SubmitEval(eval);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSubmitEval(EvalServiceLibrary.Eval eval, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitEval(eval, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSubmitEval(System.IAsyncResult result) {
            base.Channel.EndSubmitEval(result);
        }
        
        private System.IAsyncResult OnBeginSubmitEval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            EvalServiceLibrary.Eval eval = ((EvalServiceLibrary.Eval)(inValues[0]));
            return this.BeginSubmitEval(eval, callback, asyncState);
        }
        
        private object[] OnEndSubmitEval(System.IAsyncResult result) {
            this.EndSubmitEval(result);
            return null;
        }
        
        private void OnSubmitEvalCompleted(object state) {
            if ((this.SubmitEvalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitEvalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitEvalAsync(EvalServiceLibrary.Eval eval) {
            this.SubmitEvalAsync(eval, null);
        }
        
        public void SubmitEvalAsync(EvalServiceLibrary.Eval eval, object userState) {
            if ((this.onBeginSubmitEvalDelegate == null)) {
                this.onBeginSubmitEvalDelegate = new BeginOperationDelegate(this.OnBeginSubmitEval);
            }
            if ((this.onEndSubmitEvalDelegate == null)) {
                this.onEndSubmitEvalDelegate = new EndOperationDelegate(this.OnEndSubmitEval);
            }
            if ((this.onSubmitEvalCompletedDelegate == null)) {
                this.onSubmitEvalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitEvalCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitEvalDelegate, new object[] {
                        eval}, this.onEndSubmitEvalDelegate, this.onSubmitEvalCompletedDelegate, userState);
        }
        
        public EvalServiceLibrary.Eval GetEval(string id) {
            return base.Channel.GetEval(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEval(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEval(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EvalServiceLibrary.Eval EndGetEval(System.IAsyncResult result) {
            return base.Channel.EndGetEval(result);
        }
        
        private System.IAsyncResult OnBeginGetEval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BeginGetEval(id, callback, asyncState);
        }
        
        private object[] OnEndGetEval(System.IAsyncResult result) {
            EvalServiceLibrary.Eval retVal = this.EndGetEval(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEvalCompleted(object state) {
            if ((this.GetEvalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEvalCompleted(this, new GetEvalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEvalAsync(string id) {
            this.GetEvalAsync(id, null);
        }
        
        public void GetEvalAsync(string id, object userState) {
            if ((this.onBeginGetEvalDelegate == null)) {
                this.onBeginGetEvalDelegate = new BeginOperationDelegate(this.OnBeginGetEval);
            }
            if ((this.onEndGetEvalDelegate == null)) {
                this.onEndGetEvalDelegate = new EndOperationDelegate(this.OnEndGetEval);
            }
            if ((this.onGetEvalCompletedDelegate == null)) {
                this.onGetEvalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEvalCompleted);
            }
            base.InvokeAsync(this.onBeginGetEvalDelegate, new object[] {
                        id}, this.onEndGetEvalDelegate, this.onGetEvalCompletedDelegate, userState);
        }
        
        public EvalServiceLibrary.Eval[] GetAllEvals() {
            return base.Channel.GetAllEvals();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllEvals(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEvals(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EvalServiceLibrary.Eval[] EndGetAllEvals(System.IAsyncResult result) {
            return base.Channel.EndGetAllEvals(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEvals(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllEvals(callback, asyncState);
        }
        
        private object[] OnEndGetAllEvals(System.IAsyncResult result) {
            EvalServiceLibrary.Eval[] retVal = this.EndGetAllEvals(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEvalsCompleted(object state) {
            if ((this.GetAllEvalsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEvalsCompleted(this, new GetAllEvalsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEvalsAsync() {
            this.GetAllEvalsAsync(null);
        }
        
        public void GetAllEvalsAsync(object userState) {
            if ((this.onBeginGetAllEvalsDelegate == null)) {
                this.onBeginGetAllEvalsDelegate = new BeginOperationDelegate(this.OnBeginGetAllEvals);
            }
            if ((this.onEndGetAllEvalsDelegate == null)) {
                this.onEndGetAllEvalsDelegate = new EndOperationDelegate(this.OnEndGetAllEvals);
            }
            if ((this.onGetAllEvalsCompletedDelegate == null)) {
                this.onGetAllEvalsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEvalsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEvalsDelegate, null, this.onEndGetAllEvalsDelegate, this.onGetAllEvalsCompletedDelegate, userState);
        }
        
        public EvalServiceLibrary.Eval[] GetEvalsBySubmitter(string submitter) {
            return base.Channel.GetEvalsBySubmitter(submitter);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEvalsBySubmitter(string submitter, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvalsBySubmitter(submitter, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public EvalServiceLibrary.Eval[] EndGetEvalsBySubmitter(System.IAsyncResult result) {
            return base.Channel.EndGetEvalsBySubmitter(result);
        }
        
        private System.IAsyncResult OnBeginGetEvalsBySubmitter(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string submitter = ((string)(inValues[0]));
            return this.BeginGetEvalsBySubmitter(submitter, callback, asyncState);
        }
        
        private object[] OnEndGetEvalsBySubmitter(System.IAsyncResult result) {
            EvalServiceLibrary.Eval[] retVal = this.EndGetEvalsBySubmitter(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEvalsBySubmitterCompleted(object state) {
            if ((this.GetEvalsBySubmitterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEvalsBySubmitterCompleted(this, new GetEvalsBySubmitterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEvalsBySubmitterAsync(string submitter) {
            this.GetEvalsBySubmitterAsync(submitter, null);
        }
        
        public void GetEvalsBySubmitterAsync(string submitter, object userState) {
            if ((this.onBeginGetEvalsBySubmitterDelegate == null)) {
                this.onBeginGetEvalsBySubmitterDelegate = new BeginOperationDelegate(this.OnBeginGetEvalsBySubmitter);
            }
            if ((this.onEndGetEvalsBySubmitterDelegate == null)) {
                this.onEndGetEvalsBySubmitterDelegate = new EndOperationDelegate(this.OnEndGetEvalsBySubmitter);
            }
            if ((this.onGetEvalsBySubmitterCompletedDelegate == null)) {
                this.onGetEvalsBySubmitterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEvalsBySubmitterCompleted);
            }
            base.InvokeAsync(this.onBeginGetEvalsBySubmitterDelegate, new object[] {
                        submitter}, this.onEndGetEvalsBySubmitterDelegate, this.onGetEvalsBySubmitterCompletedDelegate, userState);
        }
        
        public void RemoveEval(string id) {
            base.Channel.RemoveEval(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRemoveEval(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveEval(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRemoveEval(System.IAsyncResult result) {
            base.Channel.EndRemoveEval(result);
        }
        
        private System.IAsyncResult OnBeginRemoveEval(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return this.BeginRemoveEval(id, callback, asyncState);
        }
        
        private object[] OnEndRemoveEval(System.IAsyncResult result) {
            this.EndRemoveEval(result);
            return null;
        }
        
        private void OnRemoveEvalCompleted(object state) {
            if ((this.RemoveEvalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveEvalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveEvalAsync(string id) {
            this.RemoveEvalAsync(id, null);
        }
        
        public void RemoveEvalAsync(string id, object userState) {
            if ((this.onBeginRemoveEvalDelegate == null)) {
                this.onBeginRemoveEvalDelegate = new BeginOperationDelegate(this.OnBeginRemoveEval);
            }
            if ((this.onEndRemoveEvalDelegate == null)) {
                this.onEndRemoveEvalDelegate = new EndOperationDelegate(this.OnEndRemoveEval);
            }
            if ((this.onRemoveEvalCompletedDelegate == null)) {
                this.onRemoveEvalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveEvalCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveEvalDelegate, new object[] {
                        id}, this.onEndRemoveEvalDelegate, this.onRemoveEvalCompletedDelegate, userState);
        }
    }
}
